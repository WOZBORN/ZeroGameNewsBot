import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
import csv
from datetime import datetime
from parser import clean_old_entries, fetch_news  # –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –∏–∑ parser.py
from dotenv import load_dotenv
import os

load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")
bot = telebot.TeleBot(TOKEN)

# CSV —Ñ–∞–π–ª —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏
csv_file = 'news.csv'
today_date = datetime.now().strftime('%Y-%m-%d')  # –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞


# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    welcome_text = (
        "üéÆ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!*\n\n"
        "–Ø –±–æ—Ç –¥–ª—è –∏–≥—Ä–æ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π. üåü\n"
        "–Ø –º–æ–≥—É –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–±–µ *—Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏–≥—Ä–æ–≤–æ–π –∏–Ω–¥—É—Å—Ç—Ä–∏–∏*!\n\n"
        "–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ. ‚¨áÔ∏è"
    )
    # –ò–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ –Ω–æ–≤–æ—Å—Ç–µ–π
    markup = InlineKeyboardMarkup()
    news_button = InlineKeyboardButton("üì∞ –°–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏", callback_data='today_news')
    markup.add(news_button)
    bot.send_message(message.chat.id, welcome_text, parse_mode='Markdown', reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–°–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏"
@bot.callback_query_handler(func=lambda call: call.data == 'today_news')
def send_today_news(call):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π
    bot.answer_callback_query(call.id, "–û–±–Ω–æ–≤–ª—è—é –Ω–æ–≤–æ—Å—Ç–∏... ‚è≥")
    clean_old_entries()  # –û—á–∏—Å—Ç–∫–∞ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
    fetch_news()  # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π

    # –°—á–∏—Ç—ã–≤–∞–µ–º —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏
    today_news = []
    with open(csv_file, 'r', encoding='utf-8') as file:
        reader = csv.DictReader(file)
        for row in reader:
            if row['parsed_date'] == today_date:
                today_news.append(row)

    # –ï—Å–ª–∏ –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–µ—Ç
    if not today_news:
        bot.send_message(call.message.chat.id, "üòî –°–µ–≥–æ–¥–Ω—è –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ–∫–∞ –Ω–µ—Ç.")
        return

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ –æ–¥–Ω–æ–π
    for news in today_news:
        img_url = news['img_url']
        title = news['title']
        post_url = news['post_url']

        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Å—Å—ã–ª–∫–∏ —á–µ—Ä–µ–∑ WebApp
        markup = InlineKeyboardMarkup()
        webapp_button = InlineKeyboardButton(
            text="üîó –û—Ç–∫—Ä—ã—Ç—å —Å—Ç–∞—Ç—å—é",
            web_app=WebAppInfo(url=post_url)
        )
        markup.add(webapp_button)

        # –ï—Å–ª–∏ –µ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ
        if img_url:
            bot.send_photo(
                call.message.chat.id,
                img_url,
                caption=f"üì∞ *{title}*",
                parse_mode='Markdown',
                reply_markup=markup
            )
        else:
            bot.send_message(
                call.message.chat.id,
                f"üì∞ *{title}*",
                parse_mode='Markdown',
                reply_markup=markup
            )

    bot.send_message(call.message.chat.id, "‚úÖ –í—Å–µ –Ω–æ–≤–æ—Å—Ç–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!")


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True)
